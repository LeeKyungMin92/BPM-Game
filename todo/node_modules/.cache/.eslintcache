[{"/home/ebebeby/swpp/todo/src/index.js":"1","/home/ebebeby/swpp/todo/src/App.js":"2","/home/ebebeby/swpp/todo/src/reportWebVitals.js":"3","/home/ebebeby/swpp/todo/src/containers/TodoList/TodoList.js":"4","/home/ebebeby/swpp/todo/src/containers/Todo/todo.js":"5","/home/ebebeby/swpp/todo/src/containers/NewTodo/NewTodo.js":"6","/home/ebebeby/swpp/todo/src/containers/TodoDetail/TodoDetail.js":"7"},{"size":500,"mtime":1625755906580,"results":"8","hashOfConfig":"9"},{"size":772,"mtime":1625762201104,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1625755906580,"results":"11","hashOfConfig":"9"},{"size":1498,"mtime":1625762576023,"results":"12","hashOfConfig":"9"},{"size":359,"mtime":1625761903449,"results":"13","hashOfConfig":"9"},{"size":1130,"mtime":1625761887275,"results":"14","hashOfConfig":"9"},{"size":422,"mtime":1625761822675,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"lskh3d",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/ebebeby/swpp/todo/src/index.js",[],["33","34"],"/home/ebebeby/swpp/todo/src/App.js",[],"/home/ebebeby/swpp/todo/src/reportWebVitals.js",[],"/home/ebebeby/swpp/todo/src/containers/TodoList/TodoList.js",["35"],"import { thisExpression } from '@babel/types';\nimport React, { Component } from 'react';\nimport './TodoList.css'\nimport { NavLink } from 'react-router-dom';\nimport Todo from '../Todo/todo';\nimport TodoDetail from '../TodoDetail/TodoDetail';\n\nclass TodoList extends Component {\n    state={\n        todos: [\n            { id: 1, title: 'SWPP', content: 'take swpp class', done: true},\n            { id: 2, title: 'Movie', content: 'watch movie', done: false},\n            { id: 3, title: 'Dinner', content: 'eat dinner', done: false},\n        ],\n        selectedTodo: null,\n    }\n    clickTodoHandler=td=>{\n        if(this.state.selectedTodo===td){\n            this.setState({...this.state, selectedTodo: null});\n        } else {\n            this.setState({...this.state, selectedTodo: td});\n        }\n    }\n    render(){\n        let todo=null;\n        if(this.state.selectedTodo){\n            todo=<TodoDetail title={this.state.selectedTodo.title} content={this.state.selectedTodo.content}/>\n        }\n        const todos=this.state.todos.map((td)=>{\n            return(<Todo key={td.id} title={td.title} done={td.done} clicked={()=>this.clickTodoHandler(td)}/>);\n        });\n        return (\n            <div className='TodoList'>\n                <div className='title'>{this.props.title}</div>\n                <div className='todos'>{todos}</div>\n                {todo}\n                <NavLink to='/new-todo' exact>New Todo</NavLink>\n            </div>\n        );\n    }\n}\nexport default TodoList;","/home/ebebeby/swpp/todo/src/containers/Todo/todo.js",[],"/home/ebebeby/swpp/todo/src/containers/NewTodo/NewTodo.js",["36"],"import React, { Component } from 'react';\nimport { Redirect } from 'react-router';\nimport './NewTodo.css'\n\nclass NewTodo extends Component{\n    state={\n        title:'',\n        content:'',\n        submitted:false,\n    }\n    postTodoHandler=()=>{\n        const data=\n        {title:this.state.title, content:this.state.content};\n        alert('Submitted\\n'+data.title+'\\n'+data.content);\n        this.setState({submitted:true});\n    }\n    render(){\n        let redirect=null;\n        if(this.state.submitted){\n            redirect=<Redirect to='/todos'/>\n        }\n        return(\n            <div className=\"NewTodo\">\n                <h1>Add a Todo</h1>\n                <label>Title</label>\n                <input type=\"text\" value={this.state.title} onChange={(event)=>this.setState({title:event.target.value})}/>\n                <label>Content</label>\n                <textarea rows=\"4\" type=\"text\" value={this.state.content} onChange={(event)=>this.setState({content:event.target.value})}/>\n                <button onClick={()=>this.postTodoHandler}>Submit</button>\n            </div>\n        )\n    }\n}\nexport default NewTodo;","/home/ebebeby/swpp/todo/src/containers/TodoDetail/TodoDetail.js",[],{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":1,"column":10,"nodeType":"43","messageId":"44","endLine":1,"endColumn":24},{"ruleId":"41","severity":1,"message":"45","line":20,"column":13,"nodeType":"43","messageId":"44","endLine":20,"endColumn":21},"no-native-reassign",["46"],"no-negated-in-lhs",["47"],"no-unused-vars","'thisExpression' is defined but never used.","Identifier","unusedVar","'redirect' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]